import cv2
import numpy as np

img = cv2.imread('main_image.jpg')
flag_img = cv2.imread('flag_image.jpg')

cv2.imshow('Main Image', img)

positions = []

def get_position(event, x, y, flags, param):
    if event == cv2.EVENT_LBUTTONDOWN:
        positions.append([x, y])

cv2.setMouseCallback('Main Image', get_position)

cv2.waitKey(0)
cv2.destroyAllWindows()

if len(positions) == 4:
    pts_main = np.array(positions, dtype=np.float32)
    pts_flag = np.array([[0, 0], [flag_img.shape[1], 0], [flag_img.shape[1], flag_img.shape[0]], [0, flag_img.shape[0]]], dtype=np.float32)
    homography_matrix, _ = cv2.findHomography(pts_flag, pts_main)
    superimposed_flag = cv2.warpPerspective(flag_img, homography_matrix, (img.shape[1], img.shape[0]))
    result_image = cv2.addWeighted(img, 1, superimposed_flag, 0.5, 0)
    cv2.imshow('Superimposed Image', result_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
else:
    print('Please select four positions in the main image.')
